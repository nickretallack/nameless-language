// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var Json = require("@glennsl/bs-json/src/Json.bs.js");
var Json_encode = require("@glennsl/bs-json/src/Json_encode.bs.js");
var CanonicalizeGraph$ReactTemplate = require("./CanonicalizeGraph.bs.js");

function encodePrimitiveValue(primitiveValue) {
  var tmp;
  switch (primitiveValue.tag | 0) {
    case 0 : 
        tmp = /* :: */[
          /* tuple */[
            "type",
            "integer"
          ],
          /* :: */[
            /* tuple */[
              "value",
              primitiveValue[0]
            ],
            /* [] */0
          ]
        ];
        break;
    case 1 : 
        tmp = /* :: */[
          /* tuple */[
            "type",
            "number"
          ],
          /* :: */[
            /* tuple */[
              "value",
              primitiveValue[0]
            ],
            /* [] */0
          ]
        ];
        break;
    case 2 : 
        tmp = /* :: */[
          /* tuple */[
            "type",
            "text"
          ],
          /* :: */[
            /* tuple */[
              "value",
              primitiveValue[0]
            ],
            /* [] */0
          ]
        ];
        break;
    
  }
  return Json_encode.object_(tmp);
}

function encodeConstant(primitiveValue) {
  return Json.stringify(Json_encode.object_(/* :: */[
                  /* tuple */[
                    "type",
                    "constant"
                  ],
                  /* :: */[
                    /* tuple */[
                      "value",
                      encodePrimitiveValue(primitiveValue)
                    ],
                    /* [] */0
                  ]
                ]));
}

function canonicalizeImplementation(implementation, dependencies) {
  switch (implementation.tag | 0) {
    case 0 : 
        return /* tuple */[
                encodeConstant(implementation[0]),
                /* [] */0,
                /* [] */0
              ];
    case 3 : 
        return CanonicalizeGraph$ReactTemplate.canonicalizeGraph(implementation[0], dependencies);
    default:
      return /* tuple */[
              "todo",
              /* [] */0,
              /* [] */0
            ];
  }
}

exports.encodePrimitiveValue = encodePrimitiveValue;
exports.encodeConstant = encodeConstant;
exports.canonicalizeImplementation = canonicalizeImplementation;
/* Json_encode Not a pure module */
