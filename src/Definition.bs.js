// Generated by BUCKLESCRIPT VERSION 4.0.14, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Belt_Id = require("bs-platform/lib/js/belt_Id.js");
var Caml_obj = require("bs-platform/lib/js/caml_obj.js");
var Belt_List = require("bs-platform/lib/js/belt_List.js");
var Belt_MapString = require("bs-platform/lib/js/belt_MapString.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");

var cmp = Caml_obj.caml_compare;

var ConnectionComparator = Belt_Id.MakeComparable(/* module */[/* cmp */cmp]);

function definedNodeKindHasValueInput(kind) {
  if (kind !== 2) {
    return kind >= 5;
  } else {
    return true;
  }
}

function definedNodeKindHasValueOutput(kind) {
  switch (kind) {
    case 1 : 
    case 3 : 
    case 4 : 
        return true;
    case 0 : 
    case 2 : 
    case 5 : 
        return false;
    
  }
}

function getName(definition, language) {
  return Belt_MapString.getExn(definition[/* documentation */1][/* name */0][/* translations */1], language)[/* text */0];
}

function getDescription(definition, language) {
  return Belt_MapString.getExn(definition[/* documentation */1][/* description */1][/* translations */1], language)[/* text */0];
}

function displayKeywordNibs(definition, language, isInputs) {
  return Belt_List.map(definition[/* display */2][/* inputOrdering */0], (function (nibID) {
                var documentation = definition[/* documentation */1];
                var nibs = isInputs ? documentation[/* inputs */2] : documentation[/* outputs */3];
                var translatable = Belt_MapString.getExn(nibs, nibID);
                var vettable = Belt_MapString.getExn(translatable[/* translations */1], language);
                return /* record */[
                        /* name */vettable[/* text */0],
                        /* nib : NibConnection */Block.__(0, [nibID])
                      ];
              }));
}

function displayKeywordInputs(definition, language) {
  return displayKeywordNibs(definition, language, true);
}

function displayKeywordOutputs(definition, language) {
  return displayKeywordNibs(definition, language, false);
}

function displayDefinedNode(definition, kind, language) {
  switch (kind) {
    case 0 : 
        return /* record */[
                /* inputs */displayKeywordNibs(definition, language, true),
                /* outputs */displayKeywordNibs(definition, language, false)
              ];
    case 2 : 
        return /* record */[
                /* inputs : :: */[
                  /* record */[
                    /* name */"implementation",
                    /* nib : ValueConnection */0
                  ],
                  displayKeywordNibs(definition, language, true)
                ],
                /* outputs */displayKeywordNibs(definition, language, false)
              ];
    case 1 : 
    case 3 : 
        return /* record */[
                /* inputs : [] */0,
                /* outputs : :: */[
                  /* record */[
                    /* name */"",
                    /* nib : ValueConnection */0
                  ],
                  /* [] */0
                ]
              ];
    case 4 : 
        return /* record */[
                /* inputs */displayKeywordNibs(definition, language, true),
                /* outputs : :: */[
                  /* record */[
                    /* name */"",
                    /* nib : ValueConnection */0
                  ],
                  /* [] */0
                ]
              ];
    case 5 : 
        return /* record */[
                /* inputs : :: */[
                  /* record */[
                    /* name */"",
                    /* nib : ValueConnection */0
                  ],
                  /* [] */0
                ],
                /* outputs */displayKeywordNibs(definition, language, true)
              ];
    
  }
}

var InvalidConnection = Caml_exceptions.create("Definition-ReactTemplate.InvalidConnection");

exports.ConnectionComparator = ConnectionComparator;
exports.definedNodeKindHasValueInput = definedNodeKindHasValueInput;
exports.definedNodeKindHasValueOutput = definedNodeKindHasValueOutput;
exports.getName = getName;
exports.getDescription = getDescription;
exports.displayKeywordNibs = displayKeywordNibs;
exports.displayKeywordInputs = displayKeywordInputs;
exports.displayKeywordOutputs = displayKeywordOutputs;
exports.displayDefinedNode = displayDefinedNode;
exports.InvalidConnection = InvalidConnection;
/* ConnectionComparator Not a pure module */
