// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Belt_Map = require("bs-platform/lib/js/belt_Map.js");
var Belt_List = require("bs-platform/lib/js/belt_List.js");
var Belt_MapString = require("bs-platform/lib/js/belt_MapString.js");
var Belt_SetString = require("bs-platform/lib/js/belt_SetString.js");
var Helpers$ReactTemplate = require("./Helpers.bs.js");
var Definition$ReactTemplate = require("./Definition.bs.js");

function canonicalizeConnection(graph, dependencies, connectionSink) {
  var match = Belt_Map.get(graph[/* connections */0], connectionSink);
  if (match) {
    var node = match[0][/* node */0];
    if (node) {
      var nodeID = node[0];
      var match$1 = Belt_MapString.getExn(graph[/* nodes */1], nodeID);
      if (typeof match$1 === "number") {
        return /* OutputOrderingReference */2;
      } else if (match$1.tag) {
        var match$2 = match$1[0];
        var kind = match$2[/* kind */0];
        var dependency = Belt_MapString.getExn(dependencies, match$2[/* definitionID */1]);
        var match$3 = Definition$ReactTemplate.definedNodeKindHasValueInput(kind);
        return /* OutputOrderingNode */Block.__(1, [/* record */[
                    /* contentID */dependency[/* contentID */0],
                    /* kind */kind,
                    /* keywordChildren */Belt_List.map(dependency[/* inputOrdering */1], (function (nibID) {
                            return canonicalizeConnection(graph, dependencies, /* record */[
                                        /* node : NodeConnection */[nodeID],
                                        /* nib : NibConnection */Block.__(0, [nibID])
                                      ]);
                          })),
                    /* valueChild */match$3 ? /* Some */[canonicalizeConnection(graph, dependencies, /* record */[
                              /* node : NodeConnection */[nodeID],
                              /* nib : ValueConnection */0
                            ])] : /* None */0
                  ]]);
      } else {
        return /* OutputOrderingList */Block.__(0, [Belt_List.makeBy(match$1[0], (function (index) {
                          return canonicalizeConnection(graph, dependencies, /* record */[
                                      /* node : NodeConnection */[nodeID],
                                      /* nib : PositionalConnection */Block.__(1, [index])
                                    ]);
                        }))]);
      }
    } else {
      return /* OutputOrderingInput */1;
    }
  } else {
    return /* OutputOrderingDisconnected */0;
  }
}

function getOutputOrdering(graph, dependencies) {
  var match = Belt_SetString.size(graph[/* outputs */3]) <= 1;
  if (match) {
    return Belt_SetString.toList(graph[/* outputs */3]);
  } else {
    return Helpers$ReactTemplate.sortBy(Belt_SetString.toList(graph[/* outputs */3]), (function (param) {
                  var graph$1 = graph;
                  var dependencies$1 = dependencies;
                  var nibID = param;
                  return canonicalizeConnection(graph$1, dependencies$1, /* record */[
                              /* node : GraphConnection */0,
                              /* nib : NibConnection */Block.__(0, [nibID])
                            ]);
                }));
  }
}

exports.getOutputOrdering = getOutputOrdering;
/* Definition-ReactTemplate Not a pure module */
