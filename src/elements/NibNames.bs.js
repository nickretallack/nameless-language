// Generated by BUCKLESCRIPT VERSION 4.0.14, PLEASE EDIT WITH CARE
'use strict';

var React = require("react");
var Belt_List = require("bs-platform/lib/js/belt_List.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");

var component = ReasonReact.statelessComponent("NibNames");

function make(position, height, title, $staropt$star, $staropt$star$1, nodeWidth, textHeight, _children) {
  var sources = $staropt$star !== undefined ? $staropt$star : /* [] */0;
  var sinks = $staropt$star$1 !== undefined ? $staropt$star$1 : /* [] */0;
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (_self) {
              Belt_List.concatMany(/* array */[title !== undefined ? /* :: */[
                        /* record */[
                          /* role : Title */2,
                          /* text */title
                        ],
                        /* [] */0
                      ] : /* [] */0]);
              var renderText = function (text, index, textRole) {
                var tmp;
                switch (textRole) {
                  case 0 : 
                      tmp = "start";
                      break;
                  case 1 : 
                      tmp = "end";
                      break;
                  case 2 : 
                      tmp = "middle";
                      break;
                  
                }
                var tmp$1;
                switch (textRole) {
                  case 0 : 
                      tmp$1 = 10.0;
                      break;
                  case 1 : 
                      tmp$1 = nodeWidth - 10.0;
                      break;
                  case 2 : 
                      tmp$1 = nodeWidth / 2.0;
                      break;
                  
                }
                return React.createElement("text", {
                            alignmentBaseline: "central",
                            textAnchor: tmp,
                            x: Pervasives.string_of_float(position[/* x */0] + tmp$1),
                            y: Pervasives.string_of_float(textHeight * (index + 0.5))
                          }, text);
              };
              var renderTexts = function (nibs, isSource) {
                return Belt_List.toArray(Belt_List.mapWithIndex(nibs, (function (index, display) {
                                  var match = title !== undefined;
                                  return renderText(display[/* name */0], index + (
                                              match ? 1 : 0
                                            ) | 0, isSource ? /* Source */0 : /* Sink */1);
                                })));
              };
              var renderedTitle = title !== undefined ? renderText(title, 0, /* Title */2) : null;
              return React.createElement(React.Fragment, undefined, React.createElement("rect", {
                              height: Pervasives.string_of_float(height * textHeight),
                              width: Pervasives.string_of_float(nodeWidth),
                              fill: "black",
                              fillOpacity: "0.1",
                              x: Pervasives.string_of_float(position[/* x */0]),
                              y: Pervasives.string_of_float(position[/* y */1])
                            }), renderedTitle, renderTexts(sources, true), renderTexts(sinks, false));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.component = component;
exports.make = make;
/* component Not a pure module */
