// Generated by BUCKLESCRIPT VERSION 4.0.14, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Belt_Debug = require("bs-platform/lib/js/belt_Debug.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");

Belt_Debug.setupChromeDebugger(/* () */0);

var component = ReasonReact.reducerComponent("WindowSize");

function make(render, _children) {
  return /* record */Block.record([
            "debugName",
            "reactClassInternal",
            "handedOffState",
            "willReceiveProps",
            "didMount",
            "didUpdate",
            "willUnmount",
            "willUpdate",
            "shouldUpdate",
            "render",
            "initialState",
            "retainedProps",
            "reducer",
            "jsElementWrapped"
          ], [
            component[/* debugName */0],
            component[/* reactClassInternal */1],
            component[/* handedOffState */2],
            component[/* willReceiveProps */3],
            (function (self) {
                Curry._1(self[/* send */3], /* Resize */Block.simpleVariant("Resize", [/* record */Block.record([
                            "x",
                            "y"
                          ], [
                            window.innerWidth,
                            window.innerHeight
                          ])]));
                window.addEventListener("resize", (function (_event) {
                        return Curry._1(self[/* send */3], /* Resize */Block.simpleVariant("Resize", [/* record */Block.record([
                                          "x",
                                          "y"
                                        ], [
                                          window.innerWidth,
                                          window.innerHeight
                                        ])]));
                      }));
                return /* () */0;
              }),
            component[/* didUpdate */5],
            component[/* willUnmount */6],
            component[/* willUpdate */7],
            component[/* shouldUpdate */8],
            (function (self) {
                return Curry._1(render, self[/* state */1]);
              }),
            (function (param) {
                return /* record */Block.record([
                          "x",
                          "y"
                        ], [
                          1366.0,
                          768.0
                        ]);
              }),
            component[/* retainedProps */11],
            (function (action, _state) {
                return /* Update */Block.variant("Update", 0, [action[0]]);
              }),
            component[/* jsElementWrapped */13]
          ]);
}

exports.component = component;
exports.make = make;
/*  Not a pure module */
