// Generated by BUCKLESCRIPT VERSION 4.0.14, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Belt_List = require("bs-platform/lib/js/belt_List.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Belt_Debug = require("bs-platform/lib/js/belt_Debug.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Belt_MapString = require("bs-platform/lib/js/belt_MapString.js");
var Graph$ReactTemplate = require("./Graph.bs.js");
var Helpers$ReactTemplate = require("../Helpers.bs.js");
var AppReducer$ReactTemplate = require("./AppReducer.bs.js");
var Definition$ReactTemplate = require("../Definition.bs.js");
var DefinitionList$ReactTemplate = require("./DefinitionList.bs.js");
var SimpleDefinition$ReactTemplate = require("./SimpleDefinition.bs.js");

Belt_Debug.setupChromeDebugger(/* () */0);

var makers = /* array */[
  /* tuple */[
    "Function",
    (function (param) {
        return Definition$ReactTemplate.makeGraph(undefined, undefined, undefined, /* array */[/* tuple */[
                      Helpers$ReactTemplate.randomID(/* () */0),
                      ""
                    ]], undefined, undefined, /* () */0);
      })
  ],
  /* tuple */[
    "Constant",
    (function (param) {
        return Definition$ReactTemplate.makeDefinition(undefined, undefined, undefined, undefined, /* ConstantImplementation */Block.variant("ConstantImplementation", 0, [/* TextValue */Block.variant("TextValue", 2, [""])]), /* () */0);
      })
  ],
  /* tuple */[
    "Interface",
    (function (param) {
        var outputID = Helpers$ReactTemplate.randomID(/* () */0);
        return Definition$ReactTemplate.makeDefinition(undefined, undefined, undefined, /* array */[/* tuple */[
                      outputID,
                      ""
                    ]], /* InterfaceImplementation */Block.variant("InterfaceImplementation", 1, [/* record */Block.record([
                          "inputTypes",
                          "outputTypes"
                        ], [
                          Belt_MapString.empty,
                          Belt_MapString.fromArray(/* array */[/* tuple */[
                                  outputID,
                                  /* PrimitiveValueType */Block.variant("PrimitiveValueType", 0, [/* TextType */2])
                                ]])
                        ])]), /* () */0);
      })
  ],
  /* tuple */[
    "Record",
    (function (param) {
        var inputID1 = Helpers$ReactTemplate.randomID(/* () */0);
        var inputID2 = Helpers$ReactTemplate.randomID(/* () */0);
        return Definition$ReactTemplate.makeDefinition(undefined, undefined, /* array */[
                    /* tuple */[
                      inputID1,
                      ""
                    ],
                    /* tuple */[
                      inputID2,
                      ""
                    ]
                  ], undefined, /* RecordTypeImplementation */Block.variant("RecordTypeImplementation", 4, [Belt_MapString.fromArray(/* array */[
                            /* tuple */[
                              inputID1,
                              /* PrimitiveValueType */Block.variant("PrimitiveValueType", 0, [/* TextType */2])
                            ],
                            /* tuple */[
                              inputID2,
                              /* PrimitiveValueType */Block.variant("PrimitiveValueType", 0, [/* TextType */2])
                            ]
                          ])]), /* () */0);
      })
  ]
];

var component = ReasonReact.reducerComponent("App");

function make(definitions, _children) {
  return /* record */Block.record([
            "debugName",
            "reactClassInternal",
            "handedOffState",
            "willReceiveProps",
            "didMount",
            "didUpdate",
            "willUnmount",
            "willUpdate",
            "shouldUpdate",
            "render",
            "initialState",
            "retainedProps",
            "reducer",
            "jsElementWrapped"
          ], [
            component[/* debugName */0],
            component[/* reactClassInternal */1],
            component[/* handedOffState */2],
            component[/* willReceiveProps */3],
            (function (self) {
                var watcherId = ReasonReact.Router[/* watchUrl */1]((function (url) {
                        return Curry._1(self[/* send */3], /* ChangeRoute */Block.variant("ChangeRoute", 2, [url]));
                      }));
                return Curry._1(self[/* onUnmount */4], (function (param) {
                              return ReasonReact.Router[/* unwatchUrl */2](watcherId);
                            }));
              }),
            component[/* didUpdate */5],
            component[/* willUnmount */6],
            component[/* willUpdate */7],
            component[/* shouldUpdate */8],
            (function (self) {
                var match = self[/* state */1][/* definitionID */2];
                var tmp;
                if (match === "") {
                  tmp = ReasonReact.element(undefined, undefined, DefinitionList$ReactTemplate.make(self[/* state */1][/* definitions */1], /* array */[]));
                } else {
                  var definitionID = self[/* state */1][/* definitionID */2];
                  var match$1 = self[/* state */1][/* execution */0];
                  if (match$1 !== undefined) {
                    console.log(match$1[/* stack */1]);
                  }
                  var match$2 = Belt_MapString.get(self[/* state */1][/* definitions */1], definitionID);
                  if (match$2 !== undefined) {
                    var definition = match$2;
                    var implementation = definition[/* implementation */0];
                    var emit = function (action) {
                      return Curry._1(self[/* send */3], /* DefinitionAction */Block.variant("DefinitionAction", 0, [/* record */Block.record([
                                        "definitionID",
                                        "action"
                                      ], [
                                        definitionID,
                                        action
                                      ])]));
                    };
                    var match$3 = self[/* state */1][/* execution */0];
                    var stackFrame;
                    if (match$3 !== undefined) {
                      var execution = match$3;
                      var match$4 = Belt_List.headExn(execution[/* stack */1]);
                      var scope = Belt_MapString.getExn(execution[/* scopes */0], match$4[/* scopeID */0]);
                      stackFrame = /* record */Block.record([
                          "scope",
                          "explicitConnectionSide",
                          "action"
                        ], [
                          scope,
                          match$4[/* explicitConnectionSide */1],
                          match$4[/* action */2]
                        ]);
                    } else {
                      stackFrame = undefined;
                    }
                    tmp = implementation.tag === 3 ? ReasonReact.element(definitionID, undefined, Graph$ReactTemplate.make(definitionID, self[/* state */1][/* definitions */1], implementation[0], definition, definition[/* display */2], definition[/* documentation */1], emit, self[/* state */1][/* error */3], stackFrame, /* array */[])) : ReasonReact.element(undefined, undefined, SimpleDefinition$ReactTemplate.make(definitionID, definition, definitions, self[/* state */1][/* error */3], emit, /* array */[]));
                  } else {
                    tmp = "Not found";
                  }
                }
                var match$5 = self[/* state */1][/* execution */0];
                var tmp$1;
                if (match$5 !== undefined) {
                  var match$6 = match$5[/* result */2];
                  tmp$1 = React.createElement("div", undefined, React.createElement("button", {
                            onClick: (function (param) {
                                return Curry._1(self[/* send */3], /* Step */0);
                              })
                          }, "step"), match$6 !== undefined ? "Result: " + Definition$ReactTemplate.displayValue(match$6) : null);
                } else {
                  tmp$1 = null;
                }
                return React.createElement("div", undefined, React.createElement("a", {
                                href: "#"
                              }, "Library"), " New:", Belt_Array.mapWithIndex(makers, (function (index, param) {
                                  var maker = param[1];
                                  return React.createElement("a", {
                                              key: String(index),
                                              className: "maker",
                                              onClick: (function (_event) {
                                                  return Curry._1(self[/* send */3], /* CreateDefinition */Block.variant("CreateDefinition", 1, [Curry._1(maker, /* () */0)]));
                                                })
                                            }, param[0]);
                                })), tmp, tmp$1);
              }),
            (function (param) {
                return /* record */Block.record([
                          "execution",
                          "definitions",
                          "definitionID",
                          "error"
                        ], [
                          undefined,
                          definitions,
                          ReasonReact.Router[/* dangerouslyGetInitialUrl */3](/* () */0)[/* hash */1],
                          0
                        ]);
              }),
            component[/* retainedProps */11],
            AppReducer$ReactTemplate.reducer,
            component[/* jsElementWrapped */13]
          ]);
}

exports.makers = makers;
exports.component = component;
exports.make = make;
/*  Not a pure module */
