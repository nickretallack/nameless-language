// Generated by BUCKLESCRIPT VERSION 4.0.14, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Helpers$ReactTemplate = require("../Helpers.bs.js");
var Definition$ReactTemplate = require("../Definition.bs.js");
var TypeSelector$ReactTemplate = require("./TypeSelector.bs.js");

var component = ReasonReact.statelessComponent("NibInterface");

function make(nibID, definitions, isInput, valueType, name, index, count, emit, _children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (_self) {
              var emitNibAction = function (action) {
                return Curry._1(emit, /* NibAction */Block.__(5, [/* record */[
                                /* nibID */nibID,
                                /* isInput */isInput,
                                /* action */action
                              ]]));
              };
              var changeName = function ($$event) {
                return emitNibAction(/* ChangeNibName */Block.__(0, [Helpers$ReactTemplate.getEventValue($$event)]));
              };
              var changeType = function (valueType) {
                return emitNibAction(/* ChangeNibType */Block.__(1, [valueType]));
              };
              var match = index !== 0;
              var match$1 = index !== (count - 1 | 0);
              return React.createElement("tr", undefined, React.createElement("td", undefined, React.createElement("a", {
                                  onClick: (function (_event) {
                                      return emitNibAction(/* RemoveNib */0);
                                    })
                                }, "x")), React.createElement("td", undefined, match ? React.createElement("a", {
                                    onClick: (function (_event) {
                                        return emitNibAction(/* ChangeNibOrdering */Block.__(2, [index - 1 | 0]));
                                      })
                                  }, "^") : null), React.createElement("td", undefined, match$1 ? React.createElement("a", {
                                    onClick: (function (_event) {
                                        return emitNibAction(/* ChangeNibOrdering */Block.__(2, [index + 1 | 0]));
                                      })
                                  }, "v") : null), React.createElement("td", undefined, React.createElement("input", {
                                  className: "name",
                                  type: "text",
                                  value: Definition$ReactTemplate.getTranslated(name, "en"),
                                  onChange: changeName
                                })), React.createElement("td", undefined, ReasonReact.element(undefined, undefined, TypeSelector$ReactTemplate.make(valueType, definitions, changeType, /* array */[]))));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.component = component;
exports.make = make;
/* component Not a pure module */
