// Generated by BUCKLESCRIPT VERSION 4.0.14, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Helpers$ReactTemplate = require("../Helpers.bs.js");
var Definition$ReactTemplate = require("../Definition.bs.js");
var TypeSelector$ReactTemplate = require("./TypeSelector.bs.js");

var component = ReasonReact.statelessComponent("NibInterface");

function make(nibID, definitions, isInput, valueType, name, emit, _children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (_self) {
              var changeName = function ($$event) {
                return Curry._1(emit, /* ChangeNibName */Block.__(4, [/* record */[
                                /* nibID */nibID,
                                /* isInput */isInput,
                                /* text */Helpers$ReactTemplate.getEventValue($$event)
                              ]]));
              };
              var changeType = function (valueType) {
                return Curry._1(emit, /* ChangeNibType */Block.__(5, [/* record */[
                                /* nibID */nibID,
                                /* isInput */isInput,
                                /* valueType */valueType
                              ]]));
              };
              return React.createElement("div", undefined, ReasonReact.element(undefined, undefined, TypeSelector$ReactTemplate.make(valueType, definitions, changeType, /* array */[])), React.createElement("input", {
                              className: "name",
                              type: "text",
                              value: Definition$ReactTemplate.getTranslated(name, "en"),
                              onChange: changeName
                            }));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.component = component;
exports.make = make;
/* component Not a pure module */
